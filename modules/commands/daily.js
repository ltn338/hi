module.exports.config = {
  name: "daily",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "Mirai Team (s·ª≠a b·ªüi ChatGPT)",
  description: "Nh·∫≠n ti·ªÅn m·ªói ng√†y",
  commandCategory: "Kinh t·∫ø",
  cooldowns: 5,
  envConfig: {
    cooldownTime: 86400000, // 24 gi·ªù
    rewardCoin: 1000000 // 1 tri·ªáu VND
  }
};

module.exports.languages = {
  "vi": {
    "cooldown": "‚è≥ B·∫°n ƒë√£ nh·∫≠n h√¥m nay r·ªìi. Vui l√≤ng quay l·∫°i sau: %1 gi·ªù %2 ph√∫t %3 gi√¢y!",
    "rewarded": "üéâ B·∫°n ƒë√£ nh·∫≠n %1 VND. Quay l·∫°i sau 24 gi·ªù ƒë·ªÉ nh·∫≠n ti·∫øp!"
  },
  "en": {
    "cooldown": "You already claimed today's reward. Try again in: %1h %2m %3s.",
    "rewarded": "You received %1 VND. Come back in 24 hours for the next reward!"
  }
};

module.exports.run = async ({ event, api, Currencies, getText }) => {
  const { threadID, senderID } = event;
  const { rewardCoin, cooldownTime } = global.configModule.daily || {
    rewardCoin: 1000000,
    cooldownTime: 86400000
  };

  console.log(`üì• [DAILY] L·ªánh ƒë∆∞·ª£c g·ªçi b·ªüi: ${senderID}`);

  try {
    const userData = await Currencies.getData(senderID);
    const data = userData.data || {};
    const now = Date.now();
    const lastClaim = data.dailyCoolDown || 0;

    if (now - lastClaim < cooldownTime) {
      const timeLeft = cooldownTime - (now - lastClaim);
      const hours = Math.floor(timeLeft / (1000 * 60 * 60));
      const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);
      const seconds = Math.floor((timeLeft / 1000) % 60);
      const msg = getText("cooldown", hours, minutes, seconds);
      return api.sendMessage(msg, threadID);
    }

    // Th·ª±c hi·ªán c·ªông ti·ªÅn v√† l∆∞u l·∫°i th·ªùi gian nh·∫≠n
    await Currencies.increaseMoney(senderID, rewardCoin);
    data.dailyCoolDown = now;
    await Currencies.setData(senderID, { data });

    const rewardMsg = getText("rewarded", rewardCoin.toLocaleString("vi-VN"));
    console.log(`‚úÖ [DAILY] C·ªông ${rewardCoin} VND cho: ${senderID}`);
    return api.sendMessage(rewardMsg, threadID);

  } catch (err) {
    console.error("‚ùå [DAILY] L·ªói:", err);
    return api.sendMessage("‚ö†Ô∏è ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω l·ªánh /daily.", threadID);
  }
};
