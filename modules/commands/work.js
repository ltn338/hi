exports.config = {
  name: "work",
  version: "0.0.9",
    hasPermssion: 0,
    credits: "H·∫£i harin", 
    description: "L√†m vi·ªác ƒë·ªÉ c√≥ ti·ªÅn, c√≥ l√†m th√¨ m·ªõi c√≥ ƒÉn",
    commandCategory: "Game",
    usages: "[prefix]work",
  countdown: 5,
  envConfig: { cooldownTime: 10 },
  usePrefix: true 
};
exports.run = async function (o){
  const { threadID: t, messageID: m, senderID: s } = o.event;
  const send = (msg, callback) => o.api.sendMessage(msg, t, callback, m) 
  let name = await o.Users.getNameUser(s)
  let data = (await o.Threads.getData(t)).data || {}
  let cooldown = this.config.envConfig.cooldownTime
  if (data["workTime"] && data["workTime"][s] && data["workTime"][s] != "undefined" && cooldown - (Date.now() - data["workTime"][s]) > 0) {
  var time = cooldown - (Date.now() - data["workTime"][s]),
  hours = Math.floor((time / (60000 * 60000 ))/24),
  minutes = Math.floor(time / 60000),
  seconds = ((time % 60000) / 1000).toFixed(0); 
  send(`[ C√îNG C·ª§ KI·∫æM TI·ªÄN ]
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üìå B·∫°n ƒë√£ h·∫øt l∆∞·ª£t d√πng, h√£y quay l·∫°i sau ${hours} gi·ªù ${minutes} ph√∫t ${seconds} gi√¢y`)
  } else {
  send({ body: `[ C√îNG C·ª§ KI·∫æM TI·ªÄN ]
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[ 1 | üé£ ] C√¢u c√°
[ 2 | ü¶Ö ] B·∫Øn chim
[ 3 | üèπ ] SƒÉn th√∫ 
[ 4 | üç≥ ] N·∫•u ƒÉn
[ 5 | ü™ì ] Ch·∫∑t c√¢y
[ 6 | üåæ ] Tr·ªìng c√¢y
[ 7 | ‚õèÔ∏è ] ƒê√†o ƒë√°
[ 8 | ‚öì ] K√©o th√πng

üìåTh·∫£ c·∫£m x√∫c or reply t∆∞∆°ng ·ª©ng v√†o tin nh·∫Øn n√†y v·ªõi nh·ªØng c√¥ng vi·ªác tr√™n ƒë·ªÉ ki·∫øm ti·ªÅn`, attachment: (await require("axios").get("https://i.imgur.com/3PlJX3a.png", { responseType: "stream"})).data }, (e, i) => {
  global.client.handleReply.push({
  name: this.config.name,
  messageID: i.messageID,
  author: s,
  name_author: name
  }),
 global.client.handleReaction.push({
  name: this.config.name,
  messageID: i.messageID,
  author: s,
  name_author: name
  })
  })
  }
  }
exports.handleReaction = async function (o){
  const { threadID: t, messageID: m, userID: s, reaction: r } = o.event;
  const h = o.handleReaction
  o.api.unsendMessage(h.messageID)
  let data = (await o.Threads.getData(t)).data
  const send = (msg, callback) => o.api.sendMessage(msg, t, callback, m)
  if (s != h.author) return send("‚ùé B·∫°n kh√¥ng ph·∫£i ng∆∞·ªùi d√πng l·ªánh");
  switch (r) {
  case "üé£": {   
  var rdca = ['C√° l√≥c', 'C√° tr√™', 'C√° h·ªìi', 'C√° di·∫øc', 'C√° tr·∫Øm', 'C√° k√®o', 'C√° r√¥ ƒë·ªìng','C√° m√®','C√° h∆∞·ªùng', 'C√° ng√°t', 'C√° tra', 'C√° tai t∆∞·ª£ng','M·ª±c l√°','M·ª±c ·ªëng','M·ª±c sim','M·ª±c mai','M·ª±c tr·ª©ng','T√¥m s√∫','T√¥m l·ªõt','T√¥m th·∫ª','T√¥m h√πm','T√¥m s·∫Øt','T√¥m ƒë·∫•t','T√¥m he'];
  var linkMap = {
        'C√° l√≥c': 'https://i.imgur.com/9n9TTuw.png',
        'C√° tr√™': 'https://i.imgur.com/WqciWwv.png',
        'C√° h·ªìi': 'https://i.imgur.com/ib1VHM2.png',
        'C√° di·∫øc': 'https://i.imgur.com/NGsRAt3.png',
        'C√° tr·∫Øm': 'https://i.imgur.com/E3Wkvsc.png',
        'C√° k√®o': 'https://i.imgur.com/etC2pwp.png',
        'C√° r√¥ ƒë·ªìng': 'https://i.imgur.com/N4L2r1h.png',
        'C√° m√®': 'https://i.imgur.com/wOCt3is.png',
        'C√° h∆∞·ªùng': 'https://i.imgur.com/HcKxJca.png',
        'C√° ng√°t': 'https://i.imgur.com/P2hCxpl.png',
        'C√° tra': 'https://i.imgur.com/fNFszDV.png',
        'C√° tai t∆∞·ª£ng': 'https://i.imgur.com/8Vig5kM.png',
        'M·ª±c l√°': 'https://i.imgur.com/A8AKlME.png',
        'M·ª±c ·ªëng': 'https://i.imgur.com/qtO7hdJ.png',
        'M·ª±c sim': 'https://i.imgur.com/Kq42m1p.png',
        'M·ª±c mai': 'https://i.imgur.com/Fvzpfxd.png',
        'M·ª±c tr·ª©ng': 'https://i.imgur.com/qUVNMnu.png',
        'T√¥m s√∫': 'https://i.imgur.com/KBNW3KT.png',
        'T√¥m l·ªõt': 'https://i.imgur.com/itRx8hZ.png',
        'T√¥m th·∫ª': 'https://i.imgur.com/iuPuj6q.png',
        'T√¥m h√πm': 'https://i.imgur.com/53VNywr.png',
        'T√¥m s·∫Øt': 'https://i.imgur.com/zVR8eFl.png',
        'T√¥m ƒë·∫•t': 'https://i.imgur.com/vSLyjG4.png',
        'T√¥m he': 'https://i.imgur.com/If7keuk.png'
  };
  var work1 = rdca[Math.floor(Math.random() * rdca.length)];
  var link = linkMap[work1];
  var coins1 = Math.floor(Math.random() * 10000000000000000000000000000) + 200;
  await o.Currencies.increaseMoney(h.author, coins1);
  var image = ['https://i.imgur.com/gMRBv7u.gif', 'https://i.imgur.com/ANpbrx4.gif']
  send({ body: 'ƒêang C√¢u C√°...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ c√¢u d√≠nh ${work1} v√† thu v·ªÅ ƒë∆∞·ª£c ${coins1}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "ü¶Ö": {
  var rdchim = ['Chim v√†ng anh','Chim s∆°n ca','Chim ch√¨a v√¥i','Chim ch√†o m√†o','chim c√°nh c·ª•t','Chim y·∫øn ph·ª•ng','Chim kh∆∞·ªõu','Chim h·ªça mi','Chim c√¥ng','Chim s√°o','Chim v·∫πt c·∫£nh','Chim cu g√°y','Chim ph∆∞·ª£ng ho√†ng ƒë·∫•t','Chim √≥i c√°','Chim s·∫£ r·ª´ng','Chim b·∫°c m√°','Chim h·ªìng h·∫°c','Chim thi√™n ƒë∆∞·ªùng','Chim gi·∫ª c√πi xanh','Chim kim t∆∞·ªõc','Chim v√†nh khuy√™n','Chim trƒ© v√†ng','Chim s·∫ª ƒë·∫•t m√†u','Chim uy√™n ∆∞∆°ng','Chim ru·ªìi'];
  var linkMap = {
  'Chim v√†ng anh': 'https://i.imgur.com/IODFTZT.png',
  'Chim s∆°n ca': 'https://i.imgur.com/w18NZ0j.png',
  'Chim ch√¨a v√¥i': 'https://i.imgur.com/F9t6wIM.png',
  'Chim ch√†o m√†o': 'https://i.imgur.com/hAjDBb4.png',
  'chim c√°nh c·ª•t': 'https://i.imgur.com/nYZAo1n.png',
  'Chim y·∫øn ph·ª•ng': 'https://i.imgur.com/w1JpOnb.png',
  'Chim kh∆∞·ªõu': 'https://i.imgur.com/zq6Uh8i.png',
  'Chim h·ªça mi': 'https://i.imgur.com/2HrqZMw.png',
  'Chim c√¥ng': 'https://i.imgur.com/KwiSalh.png',
  'Chim s√°o': 'https://i.imgur.com/kQHM2QU.png',
  'Chim v·∫πt c·∫£nh': 'https://i.imgur.com/AJfELUD.png',
  'Chim cu g√°y': 'https://i.imgur.com/IT0zskz.png',
  'Chim ph∆∞·ª£ng ho√†ng ƒë·∫•t': 'https://i.imgur.com/8v1reJo.png',
  'Chim √≥i c√°': 'https://i.imgur.com/ZUajQh3.png',
  'Chim s·∫£ r·ª´ng': 'https://i.imgur.com/kkzif3R.png',
  'Chim b·∫°c m√°': 'https://i.imgur.com/kySrcN8.png',
  'Chim h·ªìng h·∫°c': 'https://i.imgur.com/8KgmIkT.png',
  'Chim thi√™n ƒë∆∞·ªùng': 'https://i.imgur.com/Xit2eQw.png',
  'Chim gi·∫ª c√πi xanh': 'https://i.imgur.com/TKFlqDB.png',
  'Chim kim t∆∞·ªõc': 'https://i.imgur.com/LibmANo.png',
  'Chim v√†nh khuy√™n': 'https://i.imgur.com/Uvc8Kes.png',
  'Chim trƒ© v√†ng': 'https://i.imgur.com/U29bnyV.png',
  'Chim s·∫ª ƒë·∫•t m√†u': 'https://i.imgur.com/R21fpw9.png',
  'Chim uy√™n ∆∞∆°ng': 'https://i.imgur.com/bErM6kt.png',
  'Chim ru·ªìi': 'https://i.imgur.com/bjI60RY.png'
  };
  var work2 = rdchim[Math.floor(Math.random() * rdchim.length)];
  var link = linkMap[work2];
  var coins2 = Math.floor(Math.random() * 10000000000000000000000000000) + 100;
  await o.Currencies.increaseMoney(h.author, coins2);
  var image = ["https://i.imgur.com/xRsawOT.gif", "https://i.imgur.com/72o6Mur.gif"]
  send({ body: 'ƒêang B·∫Øn Chim...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ b·∫Øn d√≠nh ${work2} v√† nh·∫≠n th√™m ƒë∆∞·ª£c ${coins2}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
} 
  break;
  case "üèπ": {
  var rdst = ['H·ªï','S∆∞ t·ª≠','Voi','H∆∞∆°u','Kh·ªâ','G·∫•u','H·∫£i c·∫©u', 'H·∫£i √¢u', 'Ch√≥', 'M√®o', 'L·ª£n', 'G√†','Ch·ªìn','D√∫i'];
  var linkMap = {
  'H·ªï': 'https://i.imgur.com/HoheUlc.png',
  'S∆∞ t·ª≠': 'https://i.imgur.com/CUWGb3y.png',
  'Voi': 'https://i.imgur.com/hxKcKKw.png',
  'H∆∞∆°u': 'https://i.imgur.com/KW6qlDJ.png',
  'Kh·ªâ': 'https://i.imgur.com/dIfRB8i.png',
  'G·∫•u': 'https://i.imgur.com/Vhi7U57.png',
  'G·∫•u n√¢u': 'https://i.imgur.com/rm1EPHp.jpeg',
  'H·∫£i c·∫©u': 'https://i.imgur.com/f3qPRFx.jpeg',
  'H·∫£i √¢u': 'https://i.imgur.com/esdBcdc.jpeg',
  'Ch√≥': 'https://i.imgur.com/jSLrQju.jpeg',
  'M√®o': 'https://i.imgur.com/D3xGABL.jpeg',
  'L·ª£n': 'https://i.imgur.com/Mi65tBI.jpeg',
  'G√†': 'https://i.imgur.com/zeZBOpo.jpeg',
  'Ch·ªìn': 'https://i.imgur.com/zdwr15i.jpeg',
  'D√∫i': 'https://i.imgur.com/yGl4za2.jpeg'
  };
  var work3 = rdst[Math.floor(Math.random() * rdst.length)];
  var link = linkMap[work3];
  var coins3 = Math.floor(Math.random() * 10000000000000000000000000000) + 400;
  await o.Currencies.increaseMoney(h.author, coins3);
  var image = ["https://i.imgur.com/aKy5VGW.gif","https://i.imgur.com/naUMa61.gif","https://i.imgur.com/KUjTvpc.gif"]
  send({ body: 'ƒêang SƒÉn Th√∫...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ sƒÉn ƒë∆∞·ª£c ${work3} v√† h√∫p th√™m ƒë∆∞·ª£c ${coins3}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "üç≥": {
  var rdna = ['Ph·ªü','Ch·∫£ c√°','B√°nh x√®o','Rau mu·ªëng','Nem r√°n/ch·∫£ gi√≤','G·ªèi cu·ªën','B√∫n b√≤ Hu·∫ø','G√† n∆∞·ªõng','B√°nh cu·ªën','Pizza','Caesar salad','Hamburger b√≤ ph√¥ mai','Khoai t√¢y nghi·ªÅn','M·ª≥ √ù s·ªët c√† chua b√≤ b·∫±m - m√¨ s·ªët spaghetti','Khoai t√¢y ƒë√∫t l√≤','B√≤ h·∫ßm rau c·ªß ki·ªÉu Ph√°p','C√° h·ªìi s·ªët chanh d√¢y'];
  var linkMap = {
  'Ph·ªü': 'https://i.imgur.com/uPYXvsq.png',
  'Ch·∫£ c√°': 'https://i.imgur.com/kO3xF0x.png',
  'B√°nh x√®o': 'https://i.imgur.com/NqO1eLY.png',
  'Rau mu·ªëng': 'https://i.imgur.com/NHrlJpQ.jpeg',
  'Nem r√°n/ch·∫£ gi√≤': 'https://i.imgur.com/8kIUE7d.jpeg',
  'G·ªèi cu·ªën': 'https://i.imgur.com/5vPbIQX.jpeg',
  'B√∫n b√≤ Hu·∫ø': 'https://i.imgur.com/WmsyFxP.jpeg',
  'G√† n∆∞·ªõng': 'https://i.imgur.com/wap9yXx.jpeg',
  'B√°nh cu·ªën': 'https://i.imgur.com/9uWffvI.png',
  'Pizza': 'https://i.imgur.com/DXCUkfH.jpeg',
  'Caesar salad': 'https://i.imgur.com/VYTcz1U.jpeg',
  'Hamburger b√≤ ph√¥ mai': 'https://i.imgur.com/rJLL2xy.jpeg',
  'Khoai t√¢y nghi·ªÅn': 'https://i.imgur.com/qXXpmie.jpeg',
  'M·ª≥ √ù s·ªët c√† chua b√≤ b·∫±m - m√¨ s·ªët spaghetti': 'https://i.imgur.com/PhlIgh1.jpeg',
  'Khoai t√¢y ƒë√∫t l√≤': 'https://i.imgur.com/YpVQM3H.jpeg',
  'B√≤ h·∫ßm rau c·ªß ki·ªÉu Ph√°p': 'https://i.imgur.com/cRkmyUX.jpeg',
  'C√° h·ªìi s·ªët chanh d√¢y': 'https://i.imgur.com/BiTtiNO.jpeg'
  };
  var work4 = rdna[Math.floor(Math.random() * rdna.length)];
  var link = linkMap[work4];
  var coins4 = Math.floor(Math.random() * 10000000000000000000000000000) + 90;
  var image = "https://i.imgur.com/Tptoq8D.gif"
  send({ body: 'ƒêang N·∫•u ƒÇn...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ n·∫•u ƒë∆∞·ª£c m√≥n ${work4} v√† nh·∫≠n ƒë∆∞·ª£c ${coins4}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "ü™ì": {
  var rdcc = ['G·ªó s·ªìi','G·ªó b·∫°ch d∆∞∆°ng','G·ªó keo','G·ªó v√¢n sam','G·ªó lim','G·ªó s∆∞a','G·ªó h∆∞∆°ng','G·ªó mun','G·ªó g·ª•','G·ªó tr·∫Øc','G·ªó c·∫©m','G·ªó c·∫©m lai','G·ªó nghi·∫øn','G·ªó m√≠t','G·ªó xoan ƒë√†o'];
  var linkMap = {
  'G·ªó s·ªìi': 'https://i.imgur.com/H8HXVwa.png',
  'G·ªó b·∫°ch d∆∞∆°ng': 'https://i.imgur.com/xw29rr9.png',
  'G·ªó keo': 'https://i.imgur.com/smfz1AY.png',
  'G·ªó v√¢n sam': 'https://i.imgur.com/qWiVr6v.png',
  'G·ªó lim': 'https://i.imgur.com/K7Pd5eF.png',
  'G·ªó s∆∞a': 'https://i.imgur.com/daiGbSc.png',
  'G·ªó h∆∞∆°ng': 'https://i.imgur.com/UlJGcnW.png',
  'G·ªó mun': 'https://i.imgur.com/1Sidihg.png',
  'G·ªó g·ª•': 'https://i.imgur.com/cTgBIzh.png',
  'G·ªó tr·∫Øc': 'https://i.imgur.com/y8O8hqL.png',
  'G·ªó c·∫©m': 'https://i.imgur.com/G7kbTYu.png',
  'G·ªó c·∫©m lai': 'https://i.imgur.com/ihXPbsl.png',
  'G·ªó nghi·∫øn': 'https://i.imgur.com/b2DWVg5.png',
  'G·ªó m√≠t': 'https://i.imgur.com/viKR8TG.png',
  'G·ªó xoan ƒë√†o': 'https://i.imgur.com/AC8eush.png'
  };
  var work5 = rdcc[Math.floor(Math.random() * rdcc.length)];
  var link = linkMap[work5];
  var coins5 = Math.floor(Math.random() * 10000000000000000000000000000) + 500;
  await o.Currencies.increaseMoney(h.author, coins5);
  var image = ["https://i.imgur.com/706Rr8j.gif" , "https://i.imgur.com/EN15fDe.gif"]
  send({ body: 'ƒêang Ch·∫∑t C√¢y...', attachment: (await require("axios").get(image[Math.floor(Math.random * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ ch·∫∑t ƒë∆∞·ª£c ${work5} v√† b√∫ th√™m ƒë∆∞·ª£c ${coins5}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "üåæ": {
  var rdtc = ['C√¢y l√∫a n∆∞·ªõc','C√¢y ng√¥','C√¢y khoai t√¢y','C√¢y l√∫a m√¨','C√¢y s·∫Øn','C√¢y kh·∫ø','C√¢y ƒë·∫°i m·∫°ch','C√¢y khoai lang','C√¢y m√≠a','C√¢y l·∫°c','C√¢y ƒë·∫≠u t∆∞∆°ng','C√¢y ƒë·∫≠u xanh','C√¢y b√¥ng g√≤n','C√¢y v·ª´ng ( c√¢y m√®)','C√¢y thu·ªëc l√†o/thu·ªëc l√°','C√¢y d·ª©a (tr√°i th∆°m)','C√¢y ƒëu ƒë·ªß','C√¢y c√† chua', 'C√¢y cam', 'C√¢y qu√Ωt', 'C√¢y b∆∞·ªüi', 'C√¢y t√°o', 'C√¢y ch√¥m ch√¥m', 'C√¢y d∆∞a h·∫•u', 'C√¢y nh√£n', 'C√¢y v·∫£i'];
  var linkMap = {
  'C√¢y m√≠a': 'https://i.imgur.com/IaHFRhC.png',
  'C√¢y l·∫°c': 'https://i.imgur.com/D46xKnp.png',
  'C√¢y ƒë·∫≠u t∆∞∆°ng': 'https://i.imgur.com/dMnOCOi.png',
  'C√¢y ƒë·∫≠u xanh': 'https://i.imgur.com/xi3OnHj.png',
  'C√¢y b√¥ng g√≤n': 'https://i.imgur.com/MHcQuwu.png',
  'C√¢y v·ª´ng ( c√¢y m√®)': 'https://i.imgur.com/xPoe97R.png',
  'C√¢y thu·ªëc l√†o/thu·ªëc l√°': 'https://i.imgur.com/aAzpc64.png',
  'C√¢y d·ª©a (tr√°i th∆°m)': 'https://i.imgur.com/mZCJt7I.png',
  'C√¢y ƒëu ƒë·ªß': 'https://i.imgur.com/vacca7H.png',
  'C√¢y l√∫a n∆∞·ªõc': 'https://i.imgur.com/1uvraj4.png',
  'C√¢y ng√¥': 'https://i.imgur.com/8us4Zxb.png',
  'C√¢y khoai t√¢y': 'https://i.imgur.com/Ld1VqaR.png',
  'C√¢y l√∫a m√¨': 'https://i.imgur.com/DycGgOY.png',
  'C√¢y s·∫Øn': 'https://i.imgur.com/c78qbES.png',
  'C√¢y kh·∫ø': 'https://i.imgur.com/Y5GUGmV.png',
  'C√¢y ƒë·∫°i m·∫°ch': 'https://i.imgur.com/JmNnwQC.png',
  'C√¢y khoai lang': 'https://i.imgur.com/pnyKcbF.png',
  'C√¢y c√† chua': 'https://i.imgur.com/LCBH1rf.jpeg',
  'C√¢y cam': 'https://i.imgur.com/M9ZMwX2.jpeg',
  'C√¢y qu√Ωt': 'https://i.imgur.com/Dv9rA98.jpeg',
  'C√¢y b∆∞·ªüi': 'https://i.imgur.com/HJP06Ub.jpeg',
  'C√¢y t√°o': 'https://i.imgur.com/TSPTQaT.jpeg',
  'C√¢y ch√¥m ch√¥m': 'https://i.imgur.com/DKQa37x.jpeg',
  'C√¢y d∆∞a h·∫•u': 'https://i.imgur.com/SuB8ExQ.jpg',
  'C√¢y nh√£n': 'https://i.imgur.com/XPwap6p.jpeg',
  'C√¢y v·∫£i': 'https://i.imgur.com/ViiNwUP.jpeg'
  };
  var work6 = rdtc[Math.floor(Math.random() * rdtc.length)];
  var link = linkMap[work6];
  var coins6 = Math.floor(Math.random() * 10000000000000000000000000000) + 1000;
  await o.Currencies.increaseMoney(h.author, coins6);
  var image = "https://i.imgur.com/HHBF6Yy.gif"
  send({ body: 'ƒêang Tr·ªìng C√¢y...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ tr·ªìng ƒë∆∞·ª£c ${work6} v√† b√°n ƒë∆∞·ª£c ${coins6}‚Ç´ v√† nh·∫≠n v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "‚õèÔ∏è": {
  var rddd = ['ƒê·ªìng', 'Ch√¨', 'V√†ng', 'K·∫Ωm',' S·∫Øt', 'Nh√¥m', 'Thi·∫øc','Mangan','ƒê√° v√¥i', 'ƒê·∫•t s√©t', 'C√°t','Ng·ªçc th·∫°ch anh','Kim c∆∞∆°ng','Ng·ªçc l·ª•c b·∫£o', 'H·ªìng ng·ªçc','ƒê√° m√£ n√£o','Saphia'];
  var linkMap = {
  'ƒê·ªìng': 'https://i.imgur.com/EghuDew.png',
  'Ch√¨': 'https://i.imgur.com/SuHXtP1.png',
  'V√†ng': 'https://i.imgur.com/cxTORIe.png',
  'K·∫Ωm': 'https://i.imgur.com/MujYEyd.png',
  'S·∫Øt': 'https://i.imgur.com/yD5IrG4.png',
  'Nh√¥m': 'https://i.imgur.com/NJcNYCX.png',
  'Thi·∫øc': 'https://i.imgur.com/yInlgHh.png',
  'Mangan': 'https://i.imgur.com/uyGmRwE.png',
  'ƒê√° v√¥i': 'https://i.imgur.com/WXaxHot.png',
  'ƒê·∫•t s√©t': 'https://i.imgur.com/Nlh30Lf.png',
  'C√°t': 'https://i.imgur.com/DtOq5hX.png',
  'Ng·ªçc th·∫°ch anh': 'https://i.imgur.com/oJoN0j7.png',
  'Kim c∆∞∆°ng': 'https://i.imgur.com/69QZHLQ.png',
  'Ng·ªçc l·ª•c b·∫£o': 'https://i.imgur.com/DJzj1EN.png',
  'H·ªìng ng·ªçc': 'https://i.imgur.com/lsXUHeJ.png',
  'ƒê√° m√£ n√£o': 'https://i.imgur.com/bGcW9bN.png',
  'Saphia': 'https://i.imgur.com/JBOaVEW.png'
  };
  var work7 = rddd[Math.floor(Math.random() * rddd.length)];
  var link = linkMap[work7];
  var coins7 = Math.floor(Math.random() * 10000000000000000000000000000) + 420;
  await o.Currencies.increaseMoney(h.author, coins7);
  var image = "https://i.imgur.com/HHzSQSE.gif"
  send({ body: 'ƒêang ƒê√†o ƒê√°...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ ƒë√†o ƒë∆∞·ª£c ${work7} v√† b√°n nh·∫≠n v·ªÅ ƒë∆∞·ª£c ${coins7}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  case "‚öì": {
  var rdt = ["Th√πng carton", "Th√πng phi", "Th√πng s∆°n", "Th√πng nh·ª±a", "Th√πng g·∫°o", "Th√πng s·∫Øt", "Th√πng bia", "Th√πng n∆∞·ªõc", "Th√πng nu√¥i c√°", "Th√πng r√°c", "Th√πng d·ªØ nhi·ªát", "Th√πng x·ªëp", "Th√πng n∆∞·ªõc ng·ªçt", "Th√πng contender", "Th√πng m√¨"];
  var linkMap = {
  "Th√πng carton": "https://i.imgur.com/Rv3F13u.jpeg",
  "Th√πng phi": "https://i.imgur.com/3XK7J4r.jpeg",
  "Th√πng s∆°n": "https://i.imgur.com/9kQB6QF.jpeg",
  "Th√πng nh·ª±a": "https://i.imgur.com/JUcaHDq.jpeg",
  "Th√πng g·∫°o": "https://i.imgur.com/TxKZP6C.jpeg",
  "Th√πng s·∫Øt": "https://i.imgur.com/HFPSKX0.jpeg",
  "Th√πng bia": "https://i.imgur.com/yNymW9i.jpeg",
  "Th√πng n∆∞·ªõc": "https://i.imgur.com/WVPFdYx.jpeg",
  "Th√πng nu√¥i c√°": "https://i.imgur.com/55Etztj.jpeg",
  "Th√πng r√°c": "https://i.imgur.com/9AHLg26.jpeg",
  "Th√πng d·ªØ nhi·ªát": "https://i.imgur.com/R3Z8DWX.jpeg",
  "Th√πng x·ªëp": "https://i.imgur.com/8rjxtXU.jpeg",
  "Th√πng n∆∞·ªõc ng·ªçt": "https://i.imgur.com/hqDTCxA.jpeg",
  "Th√πng contender": "https://i.imgur.com/TlkGrJ7.jpeg",
  "Th√πng m√¨": "https://i.imgur.com/CJw9Sid.jpeg",
  }
  var work8 = rdt[Math.floor(Math.random() * rdt.length)];
  var link = linkMap[work8];
  var coins8 = Math.floor(Math.random() * 10000000000000000000000000000) + 500;
  await o.Currencies.increaseMoney(h.author, coins8);
  var image = "https://imgur.com/0eCG0xf.gif"
  send({ body: 'ƒêang K√©o th√πng...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ k√©o ƒë∆∞·ª£c ${work8} v√† b√°n nh·∫≠n v·ªÅ ƒë∆∞·ª£c ${coins8}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  default: send("‚ùé Icon n√†y kh√¥ng n·∫±m trong danh s√°ch")
  }
}
exports.handleReply = async function (o){
  const { threadID: t, messageID: m, senderID: s, body: b } = o.event;
  const h = o.handleReply
  o.api.unsendMessage(h.messageID)
  const send = (msg, callback) => o.api.sendMessage(msg, t, callback, m)
  let data = (await o.Threads.getData(t)).data
  if (s != h.author) return send("‚ùé B·∫°n kh√¥ng ph·∫£i ng∆∞·ªùi d√πng l·ªánh");
  switch (b) {
  case "1": {   
  var rdca = ['C√° l√≥c', 'C√° tr√™', 'C√° h·ªìi', 'C√° di·∫øc', 'C√° tr·∫Øm', 'C√° k√®o', 'C√° r√¥ ƒë·ªìng','C√° m√®','C√° h∆∞·ªùng', 'C√° ng√°t', 'C√° tra', 'C√° tai t∆∞·ª£ng','M·ª±c l√°','M·ª±c ·ªëng','M·ª±c sim','M·ª±c mai','M·ª±c tr·ª©ng','T√¥m s√∫','T√¥m l·ªõt','T√¥m th·∫ª','T√¥m h√πm','T√¥m s·∫Øt','T√¥m ƒë·∫•t','T√¥m he'];
  var linkMap = {
        'C√° l√≥c': 'https://i.imgur.com/9n9TTuw.png',
        'C√° tr√™': 'https://i.imgur.com/WqciWwv.png',
        'C√° h·ªìi': 'https://i.imgur.com/ib1VHM2.png',
        'C√° di·∫øc': 'https://i.imgur.com/NGsRAt3.png',
        'C√° tr·∫Øm': 'https://i.imgur.com/E3Wkvsc.png',
        'C√° k√®o': 'https://i.imgur.com/etC2pwp.png',
        'C√° r√¥ ƒë·ªìng': 'https://i.imgur.com/N4L2r1h.png',
        'C√° m√®': 'https://i.imgur.com/wOCt3is.png',
        'C√° h∆∞·ªùng': 'https://i.imgur.com/HcKxJca.png',
        'C√° ng√°t': 'https://i.imgur.com/P2hCxpl.png',
        'C√° tra': 'https://i.imgur.com/fNFszDV.png',
        'C√° tai t∆∞·ª£ng': 'https://i.imgur.com/8Vig5kM.png',
        'M·ª±c l√°': 'https://i.imgur.com/A8AKlME.png',
        'M·ª±c ·ªëng': 'https://i.imgur.com/qtO7hdJ.png',
        'M·ª±c sim': 'https://i.imgur.com/Kq42m1p.png',
        'M·ª±c mai': 'https://i.imgur.com/Fvzpfxd.png',
        'M·ª±c tr·ª©ng': 'https://i.imgur.com/qUVNMnu.png',
        'T√¥m s√∫': 'https://i.imgur.com/KBNW3KT.png',
        'T√¥m l·ªõt': 'https://i.imgur.com/itRx8hZ.png',
        'T√¥m th·∫ª': 'https://i.imgur.com/iuPuj6q.png',
        'T√¥m h√πm': 'https://i.imgur.com/53VNywr.png',
        'T√¥m s·∫Øt': 'https://i.imgur.com/zVR8eFl.png',
        'T√¥m ƒë·∫•t': 'https://i.imgur.com/vSLyjG4.png',
        'T√¥m he': 'https://i.imgur.com/If7keuk.png'
  };
  var work1 = rdca[Math.floor(Math.random() * rdca.length)];
  var link = linkMap[work1];
  var coins1 = Math.floor(Math.random() * 10000000000000000000000000000) + 200;
  await o.Currencies.increaseMoney(h.author, coins1);
  var image = ['https://i.imgur.com/gMRBv7u.gif', 'https://i.imgur.com/ANpbrx4.gif']
  send({ body: 'ƒêang C√¢u C√°...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ c√¢u d√≠nh ${work1} v√† thu v·ªÅ ƒë∆∞·ª£c ${coins1}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "2": {
  var rdchim = ['Chim v√†ng anh','Chim s∆°n ca','Chim ch√¨a v√¥i','Chim ch√†o m√†o','chim c√°nh c·ª•t','Chim y·∫øn ph·ª•ng','Chim kh∆∞·ªõu','Chim h·ªça mi','Chim c√¥ng','Chim s√°o','Chim v·∫πt c·∫£nh','Chim cu g√°y','Chim ph∆∞·ª£ng ho√†ng ƒë·∫•t','Chim √≥i c√°','Chim s·∫£ r·ª´ng','Chim b·∫°c m√°','Chim h·ªìng h·∫°c','Chim thi√™n ƒë∆∞·ªùng','Chim gi·∫ª c√πi xanh','Chim kim t∆∞·ªõc','Chim v√†nh khuy√™n','Chim trƒ© v√†ng','Chim s·∫ª ƒë·∫•t m√†u','Chim uy√™n ∆∞∆°ng','Chim ru·ªìi'];
  var linkMap = {
  'Chim v√†ng anh': 'https://i.imgur.com/IODFTZT.png',
  'Chim s∆°n ca': 'https://i.imgur.com/w18NZ0j.png',
  'Chim ch√¨a v√¥i': 'https://i.imgur.com/F9t6wIM.png',
  'Chim ch√†o m√†o': 'https://i.imgur.com/hAjDBb4.png',
  'chim c√°nh c·ª•t': 'https://i.imgur.com/nYZAo1n.png',
  'Chim y·∫øn ph·ª•ng': 'https://i.imgur.com/w1JpOnb.png',
  'Chim kh∆∞·ªõu': 'https://i.imgur.com/zq6Uh8i.png',
  'Chim h·ªça mi': 'https://i.imgur.com/2HrqZMw.png',
  'Chim c√¥ng': 'https://i.imgur.com/KwiSalh.png',
  'Chim s√°o': 'https://i.imgur.com/kQHM2QU.png',
  'Chim v·∫πt c·∫£nh': 'https://i.imgur.com/AJfELUD.png',
  'Chim cu g√°y': 'https://i.imgur.com/IT0zskz.png',
  'Chim ph∆∞·ª£ng ho√†ng ƒë·∫•t': 'https://i.imgur.com/8v1reJo.png',
  'Chim √≥i c√°': 'https://i.imgur.com/ZUajQh3.png',
  'Chim s·∫£ r·ª´ng': 'https://i.imgur.com/kkzif3R.png',
  'Chim b·∫°c m√°': 'https://i.imgur.com/kySrcN8.png',
  'Chim h·ªìng h·∫°c': 'https://i.imgur.com/8KgmIkT.png',
  'Chim thi√™n ƒë∆∞·ªùng': 'https://i.imgur.com/Xit2eQw.png',
  'Chim gi·∫ª c√πi xanh': 'https://i.imgur.com/TKFlqDB.png',
  'Chim kim t∆∞·ªõc': 'https://i.imgur.com/LibmANo.png',
  'Chim v√†nh khuy√™n': 'https://i.imgur.com/Uvc8Kes.png',
  'Chim trƒ© v√†ng': 'https://i.imgur.com/U29bnyV.png',
  'Chim s·∫ª ƒë·∫•t m√†u': 'https://i.imgur.com/R21fpw9.png',
  'Chim uy√™n ∆∞∆°ng': 'https://i.imgur.com/bErM6kt.png',
  'Chim ru·ªìi': 'https://i.imgur.com/bjI60RY.png'
  };
  var work2 = rdchim[Math.floor(Math.random() * rdchim.length)];
  var link = linkMap[work2];
  var coins2 = Math.floor(Math.random() * 10000000000000000000000000000) + 100;
  await o.Currencies.increaseMoney(h.author, coins2);
  var image = ["https://i.imgur.com/xRsawOT.gif", "https://i.imgur.com/72o6Mur.gif"]
  send({ body: 'ƒêang B·∫Øn Chim...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ b·∫Øn d√≠nh ${work2} v√† nh·∫≠n th√™m ƒë∆∞·ª£c ${coins2}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
} 
  break;
  case "3": {
  var rdst = ['H·ªï','S∆∞ t·ª≠','Voi','H∆∞∆°u','Kh·ªâ','G·∫•u','H·∫£i c·∫©u', 'H·∫£i √¢u', 'Ch√≥', 'M√®o', 'L·ª£n', 'G√†','Ch·ªìn','D√∫i'];
  var linkMap = {
  'H·ªï': 'https://i.imgur.com/HoheUlc.png',
  'S∆∞ t·ª≠': 'https://i.imgur.com/CUWGb3y.png',
  'Voi': 'https://i.imgur.com/hxKcKKw.png',
  'H∆∞∆°u': 'https://i.imgur.com/KW6qlDJ.png',
  'Kh·ªâ': 'https://i.imgur.com/dIfRB8i.png',
  'G·∫•u': 'https://i.imgur.com/Vhi7U57.png',
  'G·∫•u n√¢u': 'https://i.imgur.com/rm1EPHp.jpeg',
  'H·∫£i c·∫©u': 'https://i.imgur.com/f3qPRFx.jpeg',
  'H·∫£i √¢u': 'https://i.imgur.com/esdBcdc.jpeg',
  'Ch√≥': 'https://i.imgur.com/jSLrQju.jpeg',
  'M√®o': 'https://i.imgur.com/D3xGABL.jpeg',
  'L·ª£n': 'https://i.imgur.com/Mi65tBI.jpeg',
  'G√†': 'https://i.imgur.com/zeZBOpo.jpeg',
  'Ch·ªìn': 'https://i.imgur.com/zdwr15i.jpeg',
  'D√∫i': 'https://i.imgur.com/yGl4za2.jpeg'
  };
  var work3 = rdst[Math.floor(Math.random() * rdst.length)];
  var link = linkMap[work3];
  var coins3 = Math.floor(Math.random() * 10000000000000000000000000000) + 400;
  await o.Currencies.increaseMoney(h.author, coins3);
  var image = ["https://i.imgur.com/aKy5VGW.gif","https://i.imgur.com/naUMa61.gif","https://i.imgur.com/KUjTvpc.gif"]
  send({ body: 'ƒêang SƒÉn Th√∫...', attachment: (await require("axios").get(image[Math.floor(Math.random() * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ sƒÉn ƒë∆∞·ª£c ${work3} v√† h√∫p th√™m ƒë∆∞·ª£c ${coins3}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "4": {
  var rdna = ['Ph·ªü','Ch·∫£ c√°','B√°nh x√®o','Rau mu·ªëng','Nem r√°n/ch·∫£ gi√≤','G·ªèi cu·ªën','B√∫n b√≤ Hu·∫ø','G√† n∆∞·ªõng','B√°nh cu·ªën','Pizza','Caesar salad','Hamburger b√≤ ph√¥ mai','Khoai t√¢y nghi·ªÅn','M·ª≥ √ù s·ªët c√† chua b√≤ b·∫±m - m√¨ s·ªët spaghetti','Khoai t√¢y ƒë√∫t l√≤','B√≤ h·∫ßm rau c·ªß ki·ªÉu Ph√°p','C√° h·ªìi s·ªët chanh d√¢y'];
  var linkMap = {
  'Ph·ªü': 'https://i.imgur.com/uPYXvsq.png',
  'Ch·∫£ c√°': 'https://i.imgur.com/kO3xF0x.png',
  'B√°nh x√®o': 'https://i.imgur.com/NqO1eLY.png',
  'Rau mu·ªëng': 'https://i.imgur.com/NHrlJpQ.jpeg',
  'Nem r√°n/ch·∫£ gi√≤': 'https://i.imgur.com/8kIUE7d.jpeg',
  'G·ªèi cu·ªën': 'https://i.imgur.com/5vPbIQX.jpeg',
  'B√∫n b√≤ Hu·∫ø': 'https://i.imgur.com/WmsyFxP.jpeg',
  'G√† n∆∞·ªõng': 'https://i.imgur.com/wap9yXx.jpeg',
  'B√°nh cu·ªën': 'https://i.imgur.com/9uWffvI.png',
  'Pizza': 'https://i.imgur.com/DXCUkfH.jpeg',
  'Caesar salad': 'https://i.imgur.com/VYTcz1U.jpeg',
  'Hamburger b√≤ ph√¥ mai': 'https://i.imgur.com/rJLL2xy.jpeg',
  'Khoai t√¢y nghi·ªÅn': 'https://i.imgur.com/qXXpmie.jpeg',
  'M·ª≥ √ù s·ªët c√† chua b√≤ b·∫±m - m√¨ s·ªët spaghetti': 'https://i.imgur.com/PhlIgh1.jpeg',
  'Khoai t√¢y ƒë√∫t l√≤': 'https://i.imgur.com/YpVQM3H.jpeg',
  'B√≤ h·∫ßm rau c·ªß ki·ªÉu Ph√°p': 'https://i.imgur.com/cRkmyUX.jpeg',
  'C√° h·ªìi s·ªët chanh d√¢y': 'https://i.imgur.com/BiTtiNO.jpeg'
  };
  var work4 = rdna[Math.floor(Math.random() * rdna.length)];
  var link = linkMap[work4];
  var coins4 = Math.floor(Math.random() * 10000000000000000000000000000) + 90;
  var image = "https://i.imgur.com/Tptoq8D.gif"
  send({ body: 'ƒêang N·∫•u ƒÇn...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ n·∫•u ƒë∆∞·ª£c m√≥n ${work4} v√† nh·∫≠n ƒë∆∞·ª£c ${coins4}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "5": {
  var rdcc = ['G·ªó s·ªìi','G·ªó b·∫°ch d∆∞∆°ng','G·ªó keo','G·ªó v√¢n sam','G·ªó lim','G·ªó s∆∞a','G·ªó h∆∞∆°ng','G·ªó mun','G·ªó g·ª•','G·ªó tr·∫Øc','G·ªó c·∫©m','G·ªó c·∫©m lai','G·ªó nghi·∫øn','G·ªó m√≠t','G·ªó xoan ƒë√†o'];
  var linkMap = {
  'G·ªó s·ªìi': 'https://i.imgur.com/H8HXVwa.png',
  'G·ªó b·∫°ch d∆∞∆°ng': 'https://i.imgur.com/xw29rr9.png',
  'G·ªó keo': 'https://i.imgur.com/smfz1AY.png',
  'G·ªó v√¢n sam': 'https://i.imgur.com/qWiVr6v.png',
  'G·ªó lim': 'https://i.imgur.com/K7Pd5eF.png',
  'G·ªó s∆∞a': 'https://i.imgur.com/daiGbSc.png',
  'G·ªó h∆∞∆°ng': 'https://i.imgur.com/UlJGcnW.png',
  'G·ªó mun': 'https://i.imgur.com/1Sidihg.png',
  'G·ªó g·ª•': 'https://i.imgur.com/cTgBIzh.png',
  'G·ªó tr·∫Øc': 'https://i.imgur.com/y8O8hqL.png',
  'G·ªó c·∫©m': 'https://i.imgur.com/G7kbTYu.png',
  'G·ªó c·∫©m lai': 'https://i.imgur.com/ihXPbsl.png',
  'G·ªó nghi·∫øn': 'https://i.imgur.com/b2DWVg5.png',
  'G·ªó m√≠t': 'https://i.imgur.com/viKR8TG.png',
  'G·ªó xoan ƒë√†o': 'https://i.imgur.com/AC8eush.png'
  };
  var work5 = rdcc[Math.floor(Math.random() * rdcc.length)];
  var link = linkMap[work5];
  var coins5 = Math.floor(Math.random() * 10000000000000000000000000000) + 500;
  await o.Currencies.increaseMoney(h.author, coins5);
  var image = ["https://i.imgur.com/706Rr8j.gif" , "https://i.imgur.com/EN15fDe.gif"]
  send({ body: 'ƒêang Ch·∫∑t C√¢y...', attachment: (await require("axios").get(image[Math.floor(Math.random * image.length)], { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ ch·∫∑t ƒë∆∞·ª£c ${work5} v√† b√∫ th√™m ƒë∆∞·ª£c ${coins5}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "6": {
  var rdtc = ['C√¢y l√∫a n∆∞·ªõc','C√¢y ng√¥','C√¢y khoai t√¢y','C√¢y l√∫a m√¨','C√¢y s·∫Øn','C√¢y kh·∫ø','C√¢y ƒë·∫°i m·∫°ch','C√¢y khoai lang','C√¢y m√≠a','C√¢y l·∫°c','C√¢y ƒë·∫≠u t∆∞∆°ng','C√¢y ƒë·∫≠u xanh','C√¢y b√¥ng g√≤n','C√¢y v·ª´ng ( c√¢y m√®)','C√¢y thu·ªëc l√†o/thu·ªëc l√°','C√¢y d·ª©a (tr√°i th∆°m)','C√¢y ƒëu ƒë·ªß','C√¢y c√† chua', 'C√¢y cam', 'C√¢y qu√Ωt', 'C√¢y b∆∞·ªüi', 'C√¢y t√°o', 'C√¢y ch√¥m ch√¥m', 'C√¢y d∆∞a h·∫•u', 'C√¢y nh√£n', 'C√¢y v·∫£i'];
  var linkMap = {
  'C√¢y m√≠a': 'https://i.imgur.com/IaHFRhC.png',
  'C√¢y l·∫°c': 'https://i.imgur.com/D46xKnp.png',
  'C√¢y ƒë·∫≠u t∆∞∆°ng': 'https://i.imgur.com/dMnOCOi.png',
  'C√¢y ƒë·∫≠u xanh': 'https://i.imgur.com/xi3OnHj.png',
  'C√¢y b√¥ng g√≤n': 'https://i.imgur.com/MHcQuwu.png',
  'C√¢y v·ª´ng ( c√¢y m√®)': 'https://i.imgur.com/xPoe97R.png',
  'C√¢y thu·ªëc l√†o/thu·ªëc l√°': 'https://i.imgur.com/aAzpc64.png',
  'C√¢y d·ª©a (tr√°i th∆°m)': 'https://i.imgur.com/mZCJt7I.png',
  'C√¢y ƒëu ƒë·ªß': 'https://i.imgur.com/vacca7H.png',
  'C√¢y l√∫a n∆∞·ªõc': 'https://i.imgur.com/1uvraj4.png',
  'C√¢y ng√¥': 'https://i.imgur.com/8us4Zxb.png',
  'C√¢y khoai t√¢y': 'https://i.imgur.com/Ld1VqaR.png',
  'C√¢y l√∫a m√¨': 'https://i.imgur.com/DycGgOY.png',
  'C√¢y s·∫Øn': 'https://i.imgur.com/c78qbES.png',
  'C√¢y kh·∫ø': 'https://i.imgur.com/Y5GUGmV.png',
  'C√¢y ƒë·∫°i m·∫°ch': 'https://i.imgur.com/JmNnwQC.png',
  'C√¢y khoai lang': 'https://i.imgur.com/pnyKcbF.png',
  'C√¢y c√† chua': 'https://i.imgur.com/LCBH1rf.jpeg',
  'C√¢y cam': 'https://i.imgur.com/M9ZMwX2.jpeg',
  'C√¢y qu√Ωt': 'https://i.imgur.com/Dv9rA98.jpeg',
  'C√¢y b∆∞·ªüi': 'https://i.imgur.com/HJP06Ub.jpeg',
  'C√¢y t√°o': 'https://i.imgur.com/TSPTQaT.jpeg',
  'C√¢y ch√¥m ch√¥m': 'https://i.imgur.com/DKQa37x.jpeg',
  'C√¢y d∆∞a h·∫•u': 'https://i.imgur.com/SuB8ExQ.jpg',
  'C√¢y nh√£n': 'https://i.imgur.com/XPwap6p.jpeg',
  'C√¢y v·∫£i': 'https://i.imgur.com/ViiNwUP.jpeg'
  };
  var work6 = rdtc[Math.floor(Math.random() * rdtc.length)];
  var link = linkMap[work6];
  var coins6 = Math.floor(Math.random() * 10000000000000000000000000000) + 1000;
  await o.Currencies.increaseMoney(h.author, coins6);
  var image = "https://i.imgur.com/HHBF6Yy.gif"
  send({ body: 'ƒêang Tr·ªìng C√¢y...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ tr·ªìng ƒë∆∞·ª£c ${work6} v√† b√°n ƒë∆∞·ª£c ${coins6}‚Ç´ v√† nh·∫≠n v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "7": {
  var rddd = ['ƒê·ªìng', 'Ch√¨', 'V√†ng', 'K·∫Ωm',' S·∫Øt', 'Nh√¥m', 'Thi·∫øc','Mangan','ƒê√° v√¥i', 'ƒê·∫•t s√©t', 'C√°t','Ng·ªçc th·∫°ch anh','Kim c∆∞∆°ng','Ng·ªçc l·ª•c b·∫£o', 'H·ªìng ng·ªçc','ƒê√° m√£ n√£o','Saphia'];
  var linkMap = {
  'ƒê·ªìng': 'https://i.imgur.com/EghuDew.png',
  'Ch√¨': 'https://i.imgur.com/SuHXtP1.png',
  'V√†ng': 'https://i.imgur.com/cxTORIe.png',
  'K·∫Ωm': 'https://i.imgur.com/MujYEyd.png',
  'S·∫Øt': 'https://i.imgur.com/yD5IrG4.png',
  'Nh√¥m': 'https://i.imgur.com/NJcNYCX.png',
  'Thi·∫øc': 'https://i.imgur.com/yInlgHh.png',
  'Mangan': 'https://i.imgur.com/uyGmRwE.png',
  'ƒê√° v√¥i': 'https://i.imgur.com/WXaxHot.png',
  'ƒê·∫•t s√©t': 'https://i.imgur.com/Nlh30Lf.png',
  'C√°t': 'https://i.imgur.com/DtOq5hX.png',
  'Ng·ªçc th·∫°ch anh': 'https://i.imgur.com/oJoN0j7.png',
  'Kim c∆∞∆°ng': 'https://i.imgur.com/69QZHLQ.png',
  'Ng·ªçc l·ª•c b·∫£o': 'https://i.imgur.com/DJzj1EN.png',
  'H·ªìng ng·ªçc': 'https://i.imgur.com/lsXUHeJ.png',
  'ƒê√° m√£ n√£o': 'https://i.imgur.com/bGcW9bN.png',
  'Saphia': 'https://i.imgur.com/JBOaVEW.png'
  };
  var work7 = rddd[Math.floor(Math.random() * rddd.length)];
  var link = linkMap[work7];
  var coins7 = Math.floor(Math.random() * 10000000000000000000000000000) + 420;
  await o.Currencies.increaseMoney(h.author, coins7);
  var image = "https://i.imgur.com/HHzSQSE.gif"
  send({ body: 'ƒêang ƒê√†o ƒê√°...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ ƒë√†o ƒë∆∞·ª£c ${work7} v√† b√°n nh·∫≠n v·ªÅ ƒë∆∞·ª£c ${coins7}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  case "8": {
  var rdt = ["Th√πng carton", "Th√πng phi", "Th√πng s∆°n", "Th√πng nh·ª±a", "Th√πng g·∫°o", "Th√πng s·∫Øt", "Th√πng bia", "Th√πng n∆∞·ªõc", "Th√πng nu√¥i c√°", "Th√πng r√°c", "Th√πng d·ªØ nhi·ªát", "Th√πng x·ªëp", "Th√πng n∆∞·ªõc ng·ªçt", "Th√πng contender", "Th√πng m√¨"];
  var linkMap = {
  "Th√πng carton": "https://i.imgur.com/Rv3F13u.jpeg",
  "Th√πng phi": "https://i.imgur.com/3XK7J4r.jpeg",
  "Th√πng s∆°n": "https://i.imgur.com/9kQB6QF.jpeg",
  "Th√πng nh·ª±a": "https://i.imgur.com/JUcaHDq.jpeg",
  "Th√πng g·∫°o": "https://i.imgur.com/TxKZP6C.jpeg",
  "Th√πng s·∫Øt": "https://i.imgur.com/HFPSKX0.jpeg",
  "Th√πng bia": "https://i.imgur.com/yNymW9i.jpeg",
  "Th√πng n∆∞·ªõc": "https://i.imgur.com/WVPFdYx.jpeg",
  "Th√πng nu√¥i c√°": "https://i.imgur.com/55Etztj.jpeg",
  "Th√πng r√°c": "https://i.imgur.com/9AHLg26.jpeg",
  "Th√πng d·ªØ nhi·ªát": "https://i.imgur.com/R3Z8DWX.jpeg",
  "Th√πng x·ªëp": "https://i.imgur.com/8rjxtXU.jpeg",
  "Th√πng n∆∞·ªõc ng·ªçt": "https://i.imgur.com/hqDTCxA.jpeg",
  "Th√πng contender": "https://i.imgur.com/TlkGrJ7.jpeg",
  "Th√πng m√¨": "https://i.imgur.com/CJw9Sid.jpeg",
  }
  var work8 = rdt[Math.floor(Math.random() * rdt.length)];
  var link = linkMap[work8];
  var coins8 = Math.floor(Math.random() * 10000000000000000000000000000) + 500;
  await o.Currencies.increaseMoney(h.author, coins8);
  var image = "https://imgur.com/0eCG0xf.gif"
  send({ body: 'ƒêang K√©o th√πng...', attachment: (await require("axios").get(image, { responseType: "stream"})).data }, async () => send({ body: `Ch√∫c m·ª´ng ${h.name_author} ƒë√£ k√©o ƒë∆∞·ª£c ${work8} v√† b√°n nh·∫≠n v·ªÅ ƒë∆∞·ª£c ${coins8}‚Ç´ v√†o v√≠`, attachment: (await require("axios").get(link, { responseType: "stream"})).data }, async() => {
  data["workTime"] ? data["workTime"] : data["workTime"] = {}
  data["workTime"][h.author] = Date.now()
  await o.Threads.setData(t, { data })
  global.data.threadData.set(t, data)
  }))
  }
  break;
  default: const choose = parseInt(b);
  if (isNaN(b)) return send("ùó©ùòÇùó∂ ùóπùóºÃÄùóªùó¥ ùó∞ùóµùóºÃ£ùóª ùü≠ ùó∞ùóºùóª ùòÄùóºÃÇÃÅ");
  if (choose > 8 || choose < 1) return send("ùóüùòÇÃõÃ£ùóÆ ùó∞ùóµùóºÃ£ùóª ùó∏ùóµùóºÃÇùóªùó¥ ùóªùóÆÃÜÃÄùó∫ ùòÅùóøùóºùóªùó¥ ùó±ùóÆùóªùóµ ùòÄùóÆÃÅùó∞ùóµ."); 
  }
}
